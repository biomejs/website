name: Run codegen
description: Run codegen
inputs:
  kinds:
    description: Which kinds of codegen to run
    required: true
    default: metadata, rules
  version:
    description: The version of Biome
    required: true
    default: "0.0.0"

runs:
  using: composite
  steps:
    - name: Install rust toolchain
      uses: moonrepo/setup-rust@d8048d4fdff0633123678b093726e6d7c8ad6de5 # v1.2.0
      with:
        cache: false

    - name: Restore rust cache
      id: cache-restore
      uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        key: rust-cache
        path: |
          $HOME/.cargo/registry
          target/debug

    - name: Codegen
      shell: bash
      run: |
        kinds_input='${{ inputs.kinds }}'

        # Split the string into an array based on comma or newline delimiter
        IFS=$'\n,' read -r -a kinds_array <<< "$kinds_input"

        # Trim whitespace from each element and filter out empty elements
        kinds=()
        for kind in "${kinds_array[@]}"; do
          kind=$(echo "$kind" | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          if [ -n "$kind" ]; then
            kinds+=("$kind")
          fi
        done

        for kind in "${kinds[@]}"; do
          echo "Running codegen for $kind"
          cargo run -p codegen "$kind"
        done
      env:
        RUST_LOG: info
        RUST_BACKTRACE: "1"
        CARGO_INCREMENTAL: "1"
        BIOME_VERSION: ${{ inputs.version }}

    - name: Clear old rust cache
      if: ${{ steps.cache-restore.outputs.cache-hit }}
      shell: bash
      run: |
        gh extension install actions/gh-actions-cache
        gh actions-cache delete rust-cache --confirm
      env:
        GH_TOKEN: ${{ github.token }}
      continue-on-error: true

    - name: Save new rust cache
      uses: actions/cache/save@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        key: rust-cache
        path: |
          $HOME/.cargo/registry
          target/debug
