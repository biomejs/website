name: Run codegen
description: Run codegen
inputs:
  kinds:
    description: Which kinds of codegen to run
    required: true
    default: metadata, rules
  version:
    description: The version of Biome
    required: true
    default: "0.0.0"

runs:
  using: composite
  steps:
    - name: Install rust toolchain
      uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
      with:
        cache: false
        bins: cargo-cache

    - name: Restore rust cache
      id: cache-restore
      uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        key: rust-cache
        path: |
          $HOME/.cargo/registry
          target/debug

    - name: Codegen
      shell: bash
      run: |
        kinds_input='${{ inputs.kinds }}'

        # Split the string into an array based on comma or newline delimiter
        IFS=$'\n,' read -r -a kinds_array <<< "$kinds_input"

        # Trim whitespace from each element and filter out empty elements
        kinds=()
        for kind in "${kinds_array[@]}"; do
          kind=$(echo "$kind" | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          if [ -n "$kind" ]; then
            kinds+=("$kind")
          fi
        done

        for kind in "${kinds[@]}"; do
          echo "Running codegen for $kind"
          cargo run -p codegen "$kind"
        done
      env:
        RUST_LOG: info
        RUST_BACKTRACE: "1"
        CARGO_INCREMENTAL: "1"
        BIOME_VERSION: ${{ inputs.version }}

    - name: Clear old rust cache
      if: ${{ steps.cache-restore.outputs.cache-hit }}
      shell: bash
      run: |
        gh extension install actions/gh-actions-cache
        gh actions-cache delete rust-cache --confirm
      env:
        GH_TOKEN: ${{ github.token }}
      continue-on-error: true

    - name: Clean Cargo Registry
      shell: bash
      run: |
        echo "Cleaning ~/.cargo before saving"
        cargo cache --autoclean
        index_dir="$HOME/.cargo/registry/index"
        if [[ -d "$index_dir" ]]; then
          find "$index_dir" -type d -name ".git" -execdir rm -rf {} \;
        fi

    - name: Clean Target Profile
      shell: bash
      run: |
        echo "Cleaning target/debug before saving"
        echo "Removing examples and incremental directories"
        find "target/debug" -type d \( -name "examples" -o -name "incremental" \) -exec rm -rf {} +
        echo "Removing dep-info files (*.d)"
        find "target/debug" -type f -name "*.d" -exec rm -f {} \;
      continue-on-error: true

    - name: Save new rust cache
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        key: rust-cache
        path: |
          $HOME/.cargo/registry
          target/debug
